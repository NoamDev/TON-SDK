.macro constructor
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
;; constructor protection
GETGLOB 6
THROWIF 51
PUSHINT 1
SETGLOB 6
;; end constructor protection
ENDS
ACCEPT
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro setSubscriptionAccount
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode addr
LDMSGADDR
ENDS
;; param: addr
CALLREF {
	CALL $setSubscriptionAccount_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	setSubscriptionAccount_internal
.type	setSubscriptionAccount_internal, @function
CALL $setSubscriptionAccount_internal_macro$

.macro setSubscriptionAccount_internal_macro
;; param: addr
; function setSubscriptionAccount
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; ==
GETGLOB 2
EQUAL
THROWIFNOT 100
ACCEPT
; expValue
; end expValue
;; push identifier addr
; colValue
; end colValue
; end function setSubscriptionAccount
SETGLOB 10

.macro getSubscriptionAccount
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
CALLREF {
	CALL $getSubscriptionAccount_internal_macro$
}
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHSLICE x00000000000000000000000025a809f06_
	STSLICER
	PUSH S1
	STSLICER
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
DROP
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getSubscriptionAccount_internal
.type	getSubscriptionAccount_internal, @function
CALL $getSubscriptionAccount_internal_macro$

.macro getSubscriptionAccount_internal_macro
; function getSubscriptionAccount
;; return
;; push identifier subscription
GETGLOB 10
; end function getSubscriptionAccount

.macro receive_macro
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; function receive
; end function receive
CALLREF {
	CALL $c7_to_c4$
}

.macro sendTransaction
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode dest
LDMSGADDR
; Decode value
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode bounce
LDIQ 1
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDI 1
}
IFNOT
ENDS
;; param: dest
;; param: value
;; param: bounce
CALLREF {
	CALL $sendTransaction_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	sendTransaction_internal
.type	sendTransaction_internal, @function
CALL $sendTransaction_internal_macro$

.macro sendTransaction_internal_macro
;; param: dest
;; param: value
;; param: bounce
; modifier checkOwnerAndAccept
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; ==
GETGLOB 2
EQUAL
THROWIFNOT 100
ACCEPT
; function sendTransaction
;; push identifier value
PUSH S1
GTINT 0
;; short-circuiting &&
DUP
PUSHCONT {
	DROP
	;; push identifier value
	PUSH S1
	;; <
	;; get member balance
	GETPARAM 7
	INDEX 0
	LESS
}
IF
THROWIFNOT 101
;; transfer()
;; push identifier value
;; push identifier dest
;; push identifier bounce
PUSH3 S1, S2, S0
NEWC
STSLICECONST x6_
STI 1
PUSHINT 3
STZEROES
STSLICE
SWAP
STGRAMS
PUSHINT 107
STZEROES
ENDC
PUSHINT 3
SENDRAWMSG
; end function sendTransaction
; end modifier checkOwnerAndAccept
BLKDROP 3

.macro c7_to_c4
GETGLOB 2
NEWC
STU 256
GETGLOB 3
STUR 64
GETGLOB 6
STUR 1
GETGLOB 10
SWAP
STSLICE
ENDC
POP C4

.macro c4_to_c7
PUSHROOT
CTOS        ; c4
LDU 256      ; pubkey c4
LDU 64      ; pubkey timestamp c4
LDU 1       ; pubkey [timestamp] constructor_flag memory
SETGLOB 10
TRUE
SETGLOB 1   ; pubkey [timestamp] constructor_flag
SETGLOB 6   ; pubkey [timestamp]
SETGLOB 3   ; D
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS        ; c4
DUP        ; c4 c4
SBITS      ; c4 bits
GTINT 1    ; c4 bits>1
PUSHCONT {
	LDU 256      ; pubkey c4
	LDU 64      ; pubkey timestamp c4
	LDU 1       ; pubkey [timestamp] constructor_flag memory
	SETGLOB 10
	TRUE
	SETGLOB 1   ; pubkey [timestamp] constructor_flag
	SETGLOB 6   ; pubkey [timestamp]
	SETGLOB 3   ; D
	SETGLOB 2
}
PUSHCONT {
	PLDDICT   ; D
	; init subscription
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 10
	; set contract pubkey
	PUSHINT 0
	SWAP
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
	PUSHINT 0 ; constructor_flag
	SETGLOB 6
	TRUE
	SETGLOB 1
}
IFELSE

.internal-alias :main_internal, 0
.internal :main_internal
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Function: main_internal
;; param: contract_balance
;; param: msg_balance
;; param: int_msg_info
;; param: msg_body_slice
;; param: transaction_type
PUSH S2
CTOS
LDU 4       ; bounced tail
LDMSGADDR   ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
IFRET
PUSH S1    ; body
SEMPTY     ; isEmpty
IFRET
PUSH S1 ; body
LDU 32  ; funcId body'
PUSH S1 ; funcId body' funcId
IFNOTRET
SWAP
CALLREF {
	CALL $public_function_selector$
}
GETGLOB 7
ISNULL
THROWIF 60

.internal-alias :main_external, -1
.internal :main_external
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 9
PUSH S1
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHINT 512
	LDSLICEX ; signatureSlice msgSlice
	DUP      ; signatureSlice msgSlice msgSlice
	HASHSU   ; signatureSlice msgSlice hashMsgSlice
	ROT
	GETGLOB 2
	DUP
	SETGLOB 5
	CHKSIGNU      ; msgSlice isSigned
	THROWIFNOT 40 ; msgSlice
}
IF
LDU 64                         ; timestamp msgSlice
SWAP                           ; msgSlice timestamp
CALL $replay_protection_macro$ ; msgSlice
LDU 32  ; expireAt msgSlice
SWAP    ; msgSlice expireAt
NOW     ; msgSlice expireAt now
GREATER ; msgSlice expireAt>now
THROWIFNOT 57
LDU  32 ; funcId body
SWAP    ; body funcId
CALLREF {
	CALL $public_function_selector$
}
GETGLOB 7
ISNULL
THROWIF 60

.macro public_function_selector
DUP
PUSHINT 379594689
EQUAL
IFJMPREF {
	CALL $getSubscriptionAccount$
}
DUP
PUSHINT 828307765
EQUAL
IFJMPREF {
	CALL $sendTransaction$
}
DUP
PUSHINT 1756716863
EQUAL
IFJMPREF {
	CALL $constructor$
}
DUP
PUSHINT 2002334446
EQUAL
IFJMPREF {
	CALL $setSubscriptionAccount$
}
